Original Source:
https://github.com/nevinvalsaraj/swarm-gazebo-simulator
(also possible) http://swarm-iitkgp.github.io/

To run:
roslaunch swarm_simulator swarm.launch

To spawn an individual robot:
rosrun gazebo_ros spawn_model -x 0 -y 0 -z 1 -file `rospack find swarm_simulator`/sdf/swarmRobot.sdf -sdf -model swarmbot0 -robot_namespace swarmbot0

To delete an individual robot (removes model but gazebo crashes - possibly this: https://github.com/ros-simulation/gazebo_ros_pkgs/issues/123):
rosservice call /gazebo/delete_model "model_name: 'swarmbot0'" 
[
terminate called after throwing an instance of 'pure virtual method called
boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >'
terminate called recursively
  what():  boost: mutex lock failed in pthread_mutex_lock: Invalid argument
Aborted (core dumped)
[gazebo-1] process has died [pid 16137, exit code 134, cmd /opt/ros/indigo/lib/gazebo_ros/gzserver -e ode worlds/empty.world __name:=gazebo __log:=/home/rholland/.ros/log/ac50f4be-6160-11e6-a756-f81a67c1857d/gazebo-1.log].
log file: /home/rholland/.ros/log/ac50f4be-6160-11e6-a756-f81a67c1857d/gazebo-1*.log
all processes on machine have died, roslaunch will exit
shutting down processing monitor...
... shutting down processing monitor complete
done
]

To control an individual swarmbot:
rostopic pub -r 10 /swarmbot0/cmd_vel geometry_msgs/Twist  '{linear:  {x: 0.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.0}}'

To get ray sensors to output:
http://wiki.ros.org/hector_gazebo_plugins#GazeboRosSonar

To view camera topic:
rosrun image_view image_view image:=/swarmbot0/front_colour_sensor_1/image_raw
